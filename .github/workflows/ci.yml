name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # delete kcli from requirements.txt to avoid dependency issues
        sed -i '/kcli/d' requirements.txt
        pip install -r requirements.txt
        pip install flake8

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 .  --max-line-length=120  --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 120 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Run basic server test
      run: |
        # Mock the kcli binary to control its output for the test
        echo '#!/bin/bash' > /tmp/kcli
        echo 'echo "KCLI command failed: Host not found" >&2' >> /tmp/kcli
        echo 'exit 1' >> /tmp/kcli
        chmod +x /tmp/kcli
        export KCLI_BIN=/tmp/kcli

        # Start the server in the background
        fastmcp run --port 5005 --host 127.0.0.1 -t streamable-http mcp.py &
        SERVER_PID=$!
        sleep 5 # Give the server time to start

        # Test the server is still running
        if ! kill -0 $SERVER_PID 2>/dev/null; then
          echo "Server did not start successfully."
          exit 1
        fi

        # Run the curl command to test the server
        curl -L -X -f POST http://127.0.0.1:5005/mcp -H "Content-Type: application/json" -H "Accept: application/json, text/event-stream" -d '{
          "jsonrpc": "2.0",
          "method": "list_vms",
          "params": {
              "host": "your-hypervisor-host"
            }
          }'

        # Kill the server
        kill $SERVER_PID
